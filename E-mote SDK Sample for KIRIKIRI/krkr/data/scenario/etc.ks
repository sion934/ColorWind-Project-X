;;----------------------------------------------------------------------
;; その他の注意点
;;----------------------------------------------------------------------
*start|その他の注意点

[cm]

E-mote 吉里吉里ドライバは、環境に依存しないCPUでの描画処理と、Direct3Dに依存するGPUでの描画処理の両方に対応しています。[l][r]
どちらの動作を行わせるかは、[em][[emoteenv][endem]タグの[em]used3d[endem]属性によって制御します。[l][r]
以下、GPUを利用するケースと、CPUを利用するケースのそれぞれの注意点を解説します。
[p][er]

まず、GPUを利用するケースについての解説です。
[p][er]

GPUを利用する場合、DirectX エンドユーザーランタイム(2010年5月以降の版)が該当するマシーンにインストールされている必要があります。[l][r]
具体的には、D3D9.dllおよびD3DX9_43.dllの2種類のdllに依存しています。
[p][er]

[begintag]
[er]
[[if exp=emote_get_d3d_available()][r]
(ここにコンフィグを記述する)[r]
[[endif]
[endtag]

実行中の環境でこれらのDLLがインストールされており、GPU描画が利用可能かどうかは、[em]emote_get_d3d_available()[endem]関数でチェックする事が出来るようになっています。[l][r]
これにより、実行時にGPU描画を選択可能にするかどうかコンフィグの動作を制御することが可能です。
[p][er]

ゲームのインストーラーで該当するバージョンのDirectXエンドユーザーランタイムをインストール済みであると確証が持てる場合、Direct3Dの有効判定は省略しても構いません。[l][r]
ただしその場合でも、GPUの世代が古く描画のパフォーマンスが出なかったり、GPUドライバの問題で描画が崩れたりするケースが想定されるので、CPU描画とGPU描画はコンフィグで変更出来るようにすることを推奨します。[l][r]
また、コンフィグによる設定の変更は、実際にE-moteキャラが描画されるより前、タイトル画面の時点で設定出来るようになっていることが望ましいです。
[p][er]

[begintag]
[er]
[[iscript][r]
if (typeof(sf[["emote_used3d"]) == "undefined")[r]
  sf[["emote_used3d"] = 1;[r]
[[endscript]
[endtag]

デフォルトでは初回起動時はCPU描画が有効になっていますが、emoteplayer.ksを読み込む前に以下のように記述することで、初回起動時にGPU描画を有効にすることも出来ます。[l][r]
GPU描画をデフォルトにする場合、描画が崩れたり安定しないケースではCPU描画に切り替えるように、マニュアルやFAQで周知をする事が望ましいです。
[p][er]

[begintag]
[er]
[endtag]

次に、CPUを利用するケースについての解説です。
[p][er]

E-mote 吉里吉里ドライバは、吉里吉里のマルチスレッド描画処理に対応しており、
マルチコアマシンでは特に高速にスムーズに動作します。[l][r]
このパフォーマンスを最大限に引き出し、なおかつ無駄な負荷を避けるため、以下の設定を強く推奨します。
[p][er]

(1) krkr.exeはオフィシャル最新版である2.232.r2では無くレポジトリ内の最新バイナリ(2.31.2013.411)を使う。[l][r]
(2) krkr.exeはkrkrconf.exeでマルチスレッド描画数=0(自動でコア数だけのスレッドを生成)に設定する。[l][r]
(3) krkr.exeはkrkrconf.exeで処理ウェイト=60Hz(1秒あたりの最大描画回数60回）に設定する。[l][r]
このサンプル自体はこれらの条件を全て満たした設定で動作しています。
[p][er]

[begintag]
[em]krkr.exeはオフィシャル最新版である2.232.r2では無くレポジトリ内の最新バイナリ(2.31.2013.411)を使う。[endem]
[endtag]

まず1番目について解説を。[l][r]
吉里吉里は、2010年の最後のオフィシャルリリースの後、マルチスレッド処理の効率を上げる修正が入っています。[l][r]
そのため、レポジトリに収録されている最新版バイナリを使用することで、その恩恵を受けることが出来ます。[l][r]
このサンプルに付属のkrkr.exeがそのバージョンなので、これをそのまま使っていただいても構いません。
[p][er]

[begintag]
[er]
[em]krkr.exeはkrkrconf.exeでマルチスレッド描画数=0(自動でコア数だけのスレッドを生成)に設定する。[endem]
[endtag]

2番目について。[l][r]
吉里吉里のマルチスレッド描画処理はデフォルト状態ではオフになっています。[l][r]
これを有効化するには、krkrconfで描画スレッド数の設定を変更する必要があります。[l][r]
0を設定しておくと、実行環境のコア数を判定して適した数のスレッドを自動で割り当てる動作をするので、この動作が一番オススメです。
[p][er]

[begintag]
[er]
[em]krkr.exeはkrkrconf.exeで処理ウェイト=60Hz(1秒あたりの最大描画回数60回）に設定する。[endem]
[endtag]

3番目について。[l][r]
吉里吉里はデフォルト設定では、トランジション時などにCPUパワーを100%食いつぶします。[l][r]
これを避けるために、1秒あたりの描画回数に制限を課すのが「処理ウェイト」の設定です。[l][r]
E-moteではアニメーションの呼び出しにトランジションと同じ機構を使うため、この設定をしておかないと、単純なまばたきをしているだけでも確実にCPUパワーを食いつぶしにかかってしまいます。[l][r]
「人間がアニメーションとして自然に感じる」値としてテレビの走査間隔などに設定されている60Hzを設定しておけば問題は無いでしょう。
[p][cm]

以上、適切な設定により、E-moteのパフォーマンスを最大化してください。

[p][er]

[jump storage=first.ks target=*start]




